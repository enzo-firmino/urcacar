{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathis/cours/projet/projet-wimsi/urcacar/src/components/fabien/index.js\";\nimport { MapLayer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport React from 'react';\nimport L from 'leaflet';\nimport 'leaflet-routing-machine';\nimport iconGreen from '../../assets/GreenMarker.png';\n\nfunction Test() {\n  const position = [49.24167849096564, 4.061995752829034]; //Position du centre de la map\n\n  var greenIcon = L.icon({\n    iconUrl: iconGreen,\n    iconSize: [31, 47],\n    // size of the icon\n    iconAnchor: [15, 47],\n    // point of the icon which will correspond to marker's location\n    popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor\n\n  });\n  const mode = 'driving'; // 'walking';\n\n  const origin = 'coords or address';\n  const destination = 'coords or address';\n  const APIKEY = 'XXXXXXXXXXXX';\n  const url = `https://maps.googleapis.com/maps/api/directions/json?origin=${origin}&destination=${destination}&key=${APIKEY}&mode=${mode}`;\n  fetch(url).then(response => response.json()).then(responseJson => {\n    if (responseJson.routes.length) {\n      this.setState({\n        coords: this.decode(responseJson.routes[0].overview_polyline.points) // definition below\n\n      });\n    }\n  }).catch(e => {\n    console.warn(e);\n  });\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    style: {\n      height: 500,\n      width: 1000\n    },\n    center: position,\n    zoom: 13,\n    scrollWheelZoom: false,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: position,\n      icon: greenIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"D\\xE9part\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapView.Polyline, {\n      coordinates: [{\n        latitude: initial.latitude,\n        longitude: initial.longitude\n      }, // optional\n      ...this.state.coords, {\n        latitude: final.latitude,\n        longitude: final.longitude\n      } // optional\n      ],\n      strokeWidth: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/home/mathis/cours/projet/projet-wimsi/urcacar/src/components/fabien/index.js"],"names":["MapLayer","Marker","Popup","TileLayer","React","L","iconGreen","Test","position","greenIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","mode","origin","destination","APIKEY","url","fetch","then","response","json","responseJson","routes","length","setState","coords","decode","overview_polyline","points","catch","e","console","warn","height","width","latitude","initial","longitude","state","final"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,KAA3B,EAAkCC,SAAlC,QAAmD,eAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,yBAAP;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;AAEA,SAASC,IAAT,GAAe;AACX,QAAMC,QAAQ,GAAG,CAAC,iBAAD,EAAoB,iBAApB,CAAjB,CADW,CAC6C;;AACxD,MAAIC,SAAS,GAAGJ,CAAC,CAACK,IAAF,CAAO;AACnBC,IAAAA,OAAO,EAAEL,SADU;AAEnBM,IAAAA,QAAQ,EAAM,CAAC,EAAD,EAAK,EAAL,CAFK;AAEK;AACxBC,IAAAA,UAAU,EAAI,CAAC,EAAD,EAAK,EAAL,CAHK;AAGK;AACxBC,IAAAA,WAAW,EAAG,CAAC,CAAC,CAAF,EAAK,CAAC,EAAN,CAJK,CAIK;;AAJL,GAAP,CAAhB;AAOA,QAAMC,IAAI,GAAG,SAAb,CATW,CASa;;AACxB,QAAMC,MAAM,GAAG,mBAAf;AACA,QAAMC,WAAW,GAAG,mBAApB;AACA,QAAMC,MAAM,GAAG,cAAf;AACA,QAAMC,GAAG,GAAI,+DAA8DH,MAAO,gBAAeC,WAAY,QAAOC,MAAO,SAAQH,IAAK,EAAxI;AAEAK,EAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,YAAY,IAAI;AAClB,QAAIA,YAAY,CAACC,MAAb,CAAoBC,MAAxB,EAAgC;AAC5B,WAAKC,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAE,KAAKC,MAAL,CAAYL,YAAY,CAACC,MAAb,CAAoB,CAApB,EAAuBK,iBAAvB,CAAyCC,MAArD,CADE,CAC2D;;AAD3D,OAAd;AAGH;AACJ,GARL,EAQOC,KARP,CAQaC,CAAC,IAAI;AAACC,IAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb;AAAgB,GARnC;AAUA,sBACE,QAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAACG,MAAAA,MAAM,EAAC,GAAR;AAAaC,MAAAA,KAAK,EAAC;AAAnB,KAArB;AAA+C,IAAA,MAAM,EAAE7B,QAAvD;AAAiE,IAAA,IAAI,EAAE,EAAvE;AAA2E,IAAA,eAAe,EAAE,KAA5F;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,WAAW,EAAC,0EADd;AAEE,MAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEA,QAAlB;AAA4B,MAAA,IAAI,EAAEC,SAAlC;AAAA,6BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAWE,QAAC,OAAD,CAAS,QAAT;AACE,MAAA,WAAW,EAAE,CACT;AAAC6B,QAAAA,QAAQ,EAAEC,OAAO,CAACD,QAAnB;AAA6BE,QAAAA,SAAS,EAAED,OAAO,CAACC;AAAhD,OADS,EACmD;AAC5D,SAAG,KAAKC,KAAL,CAAWb,MAFL,EAGT;AAACU,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAjB;AAA2BE,QAAAA,SAAS,EAAEE,KAAK,CAACF;AAA5C,OAHS,CAG+C;AAH/C,OADf;AAME,MAAA,WAAW,EAAE;AANf;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBH;;KAhDQjC,I;AAkDT,eAAeA,IAAf","sourcesContent":["import { MapLayer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport React from 'react';\nimport L from 'leaflet';\nimport 'leaflet-routing-machine';\nimport iconGreen from '../../assets/GreenMarker.png'\n\nfunction Test(){\n    const position = [49.24167849096564, 4.061995752829034] //Position du centre de la map\n    var greenIcon = L.icon({\n        iconUrl: iconGreen,\n        iconSize:     [31, 47], // size of the icon\n        iconAnchor:   [15, 47], // point of the icon which will correspond to marker's location\n        popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor\n    });\n\n    const mode = 'driving'; // 'walking';\n    const origin = 'coords or address';\n    const destination = 'coords or address';\n    const APIKEY = 'XXXXXXXXXXXX';\n    const url = `https://maps.googleapis.com/maps/api/directions/json?origin=${origin}&destination=${destination}&key=${APIKEY}&mode=${mode}`;\n\n    fetch(url)\n        .then(response => response.json())\n        .then(responseJson => {\n            if (responseJson.routes.length) {\n                this.setState({\n                    coords: this.decode(responseJson.routes[0].overview_polyline.points) // definition below\n                });\n            }\n        }).catch(e => {console.warn(e)});\n\n    return (\n      <MapContainer style={{height:500, width:1000}} center={position} zoom={13} scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={position} icon={greenIcon}>\n          <Popup>\n            DÃ©part\n          </Popup>\n        </Marker>\n\n        <MapView.Polyline\n          coordinates={[\n              {latitude: initial.latitude, longitude: initial.longitude}, // optional\n              ...this.state.coords,\n              {latitude: final.latitude, longitude: final.longitude}, // optional\n          ]}\n          strokeWidth={4}\n      />\n\n      </MapContainer>\n    )\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}